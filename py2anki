#!/usr/bin/env python
"""
Create an Anki deck for the names exported by a Python module.
"""

from importlib import import_module
import argparse

from more_itertools import first_true


def process_module(module, module_name, object_type):
    """Create Anki notes for a single module"""
    with open(module_name + '.txt', 'w') as f:
        print(f"tags:python python::{module_name}", file=f)
        attrs = getattr(module, '__all__', dir(module))
        for attr_name in attrs:
            if attr_name.startswith('_'):
                continue
            attr = getattr(module, attr_name)
            doc = getattr(attr, '__doc__', None)
            if doc:
                lines = [l.strip() for l in doc.split('\n')]
                doc = first_true(
                        lines,
                        pred=lambda x: x != "" and '->' not in x,
                        default="XXX please fill me in")
            f.write(f"{module_name}.{attr_name};{doc};{object_type}\n")

parser = argparse.ArgumentParser(
        description="Generate Anki cards for Python modules")
parser.add_argument(
        '--object-type', '-t',
        help="object type",
        default="standard library object")
parser.add_argument('modules', metavar='module', type=str, nargs='+')
args = parser.parse_args()
for module_name in args.modules:
    if module_name.startswith('__'):
        import __main__
        module = getattr(__main__, module_name)
    else:
        module = import_module(module_name)
    process_module(module, module_name, args.object_type)
